{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","alt","original_title","src","poster_path","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa63785.chunk.js","sourcesContent":["/* eslint-disable default-case */\n/* eslint-disable import/no-anonymous-default-export */\nconst API_KEY = '324478992c1fd0fc5d9b1a61cc55c7e9';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\nO que precisaremos pegar da API:\n- originais da nerflix;\n- recomendados (trending);\n- em alta (top rated);\n- ação;\n- comédia;\n- terror;\n- romance;\n- documentários.\n*/\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para você',\n        items: await basicFetch(`/trending/all/week?&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        items: await basicFetch(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`) \n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`) \n      },\n      {\n        slug: 'documentary',\n        title: 'Documentários',\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`) \n      }\n    ];\n  },\n\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId) {\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        default:\n          info = null;\n        break;\n      }\n    }\n\n    return info;\n  }\n\n}","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n\n    const [scrollX, setScrollX] = useState(0);\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0) {\n          x = 0;\n        }\n        setScrollX(x)\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 150;\n        if((window.innerWidth - listW) > x) {\n          x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x)\n    }\n\n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n              <NavigateBeforeIcon style={{fontSize: 50}} />\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n              <NavigateNextIcon style={{fontSize: 50}} />\n            </div>\n            <div className=\"movieRow--listarea\">\n              <div className=\"movieRow--list\" style={{\n                marginLeft: scrollX,\n                width: items.results.length * 150\n              }}>\n                {items.results.length > 0 && items.results.map((item, key) => (\n                  <div key={key} className=\"movieRow--item\">\n                    <img alt={item.original_title} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\n                  </div>\n                ))}\n              </div>\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for(let i in item.genres) {\n      genres.push( item.genres[i].name )\n    }\n\n    let description = item.overview;\n    if(description.length > 200) {\n      description = description.substring(0, 200) + '...';\n    }\n\n    return (\n        <section className=\"featured\" style={{\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n          <div className=\"featured--vertical\">\n            <div className=\"featured--horizontal\">\n              <div className=\"featured--name\">{item.original_name}</div>\n              <div className=\"featured--info\">\n                <div className=\"featured--points\">{item.vote_average} pontos</div>\n                <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n              </div>\n              <div className=\"featured--description\">{description}</div>\n              <div className=\"featured--buttons\">\n                <a className=\"featured--watchbutton\" href={`/watch/${item.id}`}>Assistir</a>\n                <a className=\"featured--mylistbutton\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\n              </div>\n              <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\n            </div>\n          </div>\n          \n        </section>\n    );\n}","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n              <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-6.png\" alt=\"Netflix\" />\n            </div>\n            <div className=\"header--user\">\n              <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"User\" />\n            </div>\n        </header>\n    );\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando featured (filme em destaque)\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {\n        featuredData && <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) =>(\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Página feita por Flavio Ribeiro Rodrigues Cordeiro, desenvolvida em React, utilizando CSS puro para efeitos e estilização, Material UI para ícones e hooks para gerenciamento de estado.<br/>\n        <br/>\n        Direitos de imagem para Netflix.<br/>\n        Dados da API pegos do site themoviedb.org.<br/>\n        Página sem fins lucrativos. Feita por razões acadêmicas.<br/>\n        Referência: Bonieky Lacerda.\n      </footer>\n      {movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"loading...\" />\n        </div>\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}